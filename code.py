# -*- coding: utf-8 -*-
"""Code.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Y-SeyPBX188OxX60b25OOGFxu1wa622Z
"""

# Commented out IPython magic to ensure Python compatibility.
# %tensorflow_version 2.x

import tensorflow as tf
from tensorflow import keras
import numpy as np
import matplotlib.pyplot as plt

fashion_mnist = keras.datasets.fashion_mnist # for loading dataset
(train_images, train_labels) , (test_images, test_labels) = fashion_mnist.load_data() # split the data into training and testing data

train_images.shape

train_images[0,23,23] # gives the look of one pixel

"""Our pixel values are between 0 to 255, 0 being black and 255 being white"""

train_labels[:10] # looking at first 10 training labels

"""Taking a look at some of these  images"""

plt.figure()
plt.imshow(train_images[7])
plt.colorbar()
plt.grid(False)
plt.show()

"""Squishing data between 0 and 1 to make it more simpler"""

train_images = train_images / 255.0
test_images = test_images / 255.0

"""Building a model"""

model = keras.Sequential([
    keras.layers.Flatten(input_shape=(28,28)), # input layer (1)
    keras.layers.Dense(128, activation='relu'), # hidden layer (2) {128 is choosen as random as it is the half of total pixel value}
    keras.layers.Dense(10, activation='softmax') # output layer (3) {10 is choosen as it is the number of classes}
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(train_images, train_labels, epochs=4)

test_loss, test_acc = model.evaluate(test_images,  test_labels, verbose=1) 

print('Test accuracy:', test_acc)

predictions = model.predict(test_images)
print(predictions)